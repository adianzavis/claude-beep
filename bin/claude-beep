#!/usr/bin/expect -f

# claude-beep - Monitor claude command and beep on "Do you want to proceed?"

# Use system beep-disturb command

# Get command line arguments (everything after this script name)
set claude_args [lrange $argv 0 end]

# If no arguments provided, show usage
if {[llength $claude_args] == 0} {
    puts "Usage: claude-beep \[claude command arguments\]"
    puts "Example: claude-beep chat"
    puts "         claude-beep code"
    exit 1
}

# Variables to track beep timing
set last_beep_time 0

# Find the original claude command (look for backup first, then try common locations)
set original_claude ""
set claude_locations [list \
    "[exec which claude]-original" \
    "/Users/adrian/.nvm/versions/node/v22.12.0/bin/claude-original" \
    "/opt/homebrew/bin/claude-original" \
    "/usr/local/bin/claude" \
]

foreach location $claude_locations {
    if {[file executable $location]} {
        set original_claude $location
        break
    }
}

if {$original_claude == ""} {
    puts stderr "Error: Could not find original claude command"
    exit 1
}

# Start the original claude process
spawn {*}[split $original_claude] {*}$claude_args

# Set timeout to never timeout
set timeout -1

# Make expect transparent - pass through all input/output
interact {
    -o -re "(Do you want to proceed\\?|Opened changes in| ❯ 1\\. Yes  )" {
        # Only beep if it's been at least 10 seconds since last beep
        set current_time [clock seconds]
        if {$current_time >= [expr $last_beep_time + 10]} {
            # Execute beep-disturb command
            catch {
                exec beep-disturb &
            }
            set last_beep_time $current_time
        }
    }
}