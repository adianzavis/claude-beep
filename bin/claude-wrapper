#!/usr/bin/expect -f

# Simple expect wrapper that replaces claude command

# Path to the original claude (Node.js version)
set original_claude "/Users/adrian/.nvm/versions/node/v22.12.0/lib/node_modules/@anthropic-ai/claude-code/cli.js"

# Get command line arguments
set claude_args [lrange $argv 0 end]

# If no arguments provided, add default argument to avoid Node.js confusion
if {[llength $claude_args] == 0} {
    set claude_args [list "--help"]
}

# Allow a beep once per prompt; re-arm after prompt disappears (debounced)
set can_beep 1
set rearm_timer ""

# Start the original claude process with node
spawn node $original_claude {*}$claude_args

# Set timeout to never timeout
set timeout -1

# Make expect transparent - pass through all input/output
interact {
    -o -re {(Do you want to (proceed\?|make [0-9]+ edits.*\?)|Opened changes in|[[:space:]]*[❯> ]?[[:space:]]*1\.[[:space:]]*Yes([[:space:]]|$))} {
        if {$can_beep} {
            catch { exec beep-disturb & }
            set can_beep 0
        }
        # Debounce: re-arm 1s after the last time we see the prompt pattern
        if {[info exists rearm_timer] && $rearm_timer ne ""} {
            after cancel $rearm_timer
        }
        set rearm_timer [after 1000 { set ::can_beep 1 }]
    }
}
